openapi: 3.0.0
paths:
  /users/{uuid}:
    get:
      operationId: getUser
      summary: ''
      parameters:
        - name: uuid
          required: true
          in: path
          description: user uuid
          schema:
            type: string
      responses:
        '200':
          description: The user has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
      tags: &ref_0
        - user
    patch:
      operationId: updateUser
      summary: ''
      parameters:
        - name: uuid
          required: true
          in: path
          description: user uuid
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: The user has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
      tags: *ref_0
  /users:
    post:
      operationId: createUser
      summary: ''
      parameters: []
      responses:
        '201':
          description: The user has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
      tags: *ref_0
  /spaces:
    post:
      operationId: SpaceController_create
      parameters:
        - name: userUuid
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceDto'
      responses:
        '201':
          description: The space has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: &ref_1
        - space
  /spaces/{id}:
    get:
      operationId: SpaceController_show
      parameters:
        - name: id
          required: true
          in: path
          description: spaceId
          schema:
            type: number
      responses:
        '200':
          description: The spaces has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: *ref_1
  /spaces/{uuid}:
    patch:
      operationId: SpaceController_update
      parameters:
        - name: uuid
          required: true
          in: path
          description: space uuid
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpaceDto'
      responses:
        '200':
          description: The space has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: *ref_1
  /spaces/join:
    patch:
      operationId: SpaceController_join
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinSpaceDto'
      responses:
        '200':
          description: The space has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: *ref_1
info:
  title: reciperu api app
  description: API documents
  version: '1.0'
  contact: {}
tags:
  - name: '1.0'
    description: ''
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    UserEntity:
      type: object
      properties:
        id:
          type: number
        uuid:
          type: string
        name:
          type: string
        spaceRole:
          type: string
        imageUrl:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
        - id
        - uuid
        - name
        - spaceRole
        - imageUrl
        - createdAt
    UpdateUserDto:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    CreateSpaceDto:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
      required:
        - name
        - password
    SpaceEntity:
      type: object
      properties:
        id:
          type: number
        uuid:
          type: string
        name:
          type: string
        password:
          type: string
        createdAt:
          format: date-time
          type: string
        users:
          $ref: '#/components/schemas/UserEntity'
      required:
        - id
        - uuid
        - name
        - password
        - createdAt
    UpdateSpaceDto:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
      required:
        - name
        - password
    JoinSpaceDto:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
      required:
        - name
        - password
