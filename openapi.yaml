openapi: 3.0.0
paths:
  /api/users/profile:
    get:
      operationId: getProfile
      summary: ''
      parameters: []
      responses:
        '200':
          description: プロフィール情報取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPresenter'
      tags: &ref_0
        - user
      security: &ref_1
        - bearer: []
  /api/users/{id}:
    patch:
      operationId: updateUser
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          description: userId
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ユーザーの情報更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPresenter'
      tags: *ref_0
      security: *ref_1
    delete:
      operationId: UserController_delete
      parameters:
        - name: id
          required: true
          in: path
          description: userId
          schema:
            type: string
      responses:
        '204':
          description: ユーザー削除
      tags: *ref_0
      security: *ref_1
  /api/recipes:
    get:
      operationId: getRecipe
      summary: ''
      parameters:
        - name: cursor
          required: false
          in: query
          description: カーソル
          schema:
            type: string
      responses:
        '200':
          description: レシピ一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecipePresenter'
      tags: &ref_2
        - recipes
      security: &ref_3
        - bearer: []
    post:
      operationId: createRecipe
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipeDto'
      responses:
        '201':
          description: レシピ登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePresenter'
      tags: *ref_2
      security: *ref_3
  /api/recipes/meta-data:
    get:
      operationId: getRecipeMetaData
      summary: ''
      parameters:
        - name: recipeUrl
          required: true
          in: query
          description: レシピURL
          schema:
            type: string
      responses:
        '200':
          description: レシピメタデータ取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeMetaDataPresenter'
      tags: *ref_2
      security: *ref_3
  /api/recipes/{id}:
    get:
      operationId: getRecipe
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: レシピ詳細取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePresenter'
      tags: *ref_2
      security: *ref_3
    put:
      operationId: updateRecipe
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecipeDto'
      responses:
        '200':
          description: レシピ更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePresenter'
      tags: *ref_2
      security: *ref_3
  /api/recipes/bulk:
    post:
      operationId: bulkInsertRecipes
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateRecipeDto'
      responses:
        '201':
          description: レシピ一括登録
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePresenter'
      tags: *ref_2
      security: *ref_3
  /api/recipes/requests:
    post:
      operationId: createRequestedRecipe
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestedRecipeDto'
      responses:
        '201':
          description: リクエストレシピ登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRequestedRecipePresenter'
      tags: *ref_2
      security: *ref_3
  /api/spaces/{id}:
    get:
      operationId: getSpace
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          description: spaceId
          schema:
            type: string
      responses:
        '200':
          description: スペースとユーザー一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacePresenter'
      tags: &ref_4
        - spaces
      security: &ref_5
        - bearer: []
    put:
      operationId: updateSpace
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpaceDto'
      responses:
        '200':
          description: スペースの更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacePresenter'
      tags: *ref_4
      security: *ref_5
  /api/spaces/invitations:
    post:
      operationId: invitationSpace
      summary: ''
      parameters: []
      responses:
        '200':
          description: スペースの招待
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceInvitationPresenter'
      tags: *ref_4
      security: *ref_5
  /api/spaces/joins:
    put:
      operationId: validateInvitation
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateInvitationDto'
      responses:
        '200':
          description: スペース参加の検証
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceJoinPresenter'
      tags: *ref_4
      security: *ref_5
  /api/menus:
    get:
      operationId: getMenu
      summary: ''
      parameters:
        - name: cursor
          required: false
          in: query
          description: カーソル
          schema:
            type: string
        - name: statuses
          required: false
          in: query
          description: ステータス
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 献立ー一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMenuPresenter'
      tags: &ref_6
        - menus
      security: &ref_7
        - bearer: []
    post:
      operationId: createMenu
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMenuDto'
      responses:
        '200':
          description: 献立の作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuPresenter'
      tags: *ref_6
      security: *ref_7
  /api/menus/pending:
    get:
      operationId: getPendingMenu
      summary: ''
      parameters: []
      responses:
        '200':
          description: 提案メニュー一覧取得
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuPresenter'
      tags: *ref_6
      security: *ref_7
  /api/menus/{id}:
    put:
      operationId: updateMenu
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMenuDto'
      responses:
        '200':
          description: 献立の更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuPresenter'
      tags: *ref_6
      security: *ref_7
    delete:
      operationId: deleteMenu
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 献立の削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMenuPresenter'
      tags: *ref_6
      security: *ref_7
  /api/auth:
    post:
      operationId: login
      summary: ''
      parameters: []
      responses:
        '201':
          description: ログイン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPresenter'
      tags:
        - auth
      security:
        - bearer: []
  /api/roadmap:
    get:
      operationId: roadmap
      summary: ''
      parameters: []
      responses:
        '200':
          description: ロードマップを取得する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapPresenter'
      tags:
        - roadmap
      security:
        - bearer: []
  /api/contact:
    post:
      operationId: send-contact
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendContactDto'
      responses:
        '200':
          description: 問い合わせ内容を送信する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPresenter'
      tags:
        - contact
      security:
        - bearer: []
info:
  title: reciperu api app
  description: API documents
  version: '1.0'
  contact: {}
tags:
  - name: '1.0'
    description: ''
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    UserPresenter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        imageUrl:
          type: string
        activeStatus:
          type: string
          enum:
            - ONBOARDING
            - JOINED_SPACE
            - NOT_JOINED_SPACE
        spaceId:
          type: string
        spaceRole:
          type: string
          enum:
            - OWNER
            - PARTICIPANT
      required:
        - id
        - name
        - imageUrl
        - activeStatus
        - spaceId
        - spaceRole
    UpdateUserDto:
      type: object
      properties:
        name:
          type: string
        imageUrl:
          type: string
        activeStatus:
          type: string
          enum:
            - ONBOARDING
            - JOINED_SPACE
            - NOT_JOINED_SPACE
      required:
        - name
        - imageUrl
        - activeStatus
    RecipePresenter:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        spaceId:
          type: string
        userId:
          type: string
        isFavorite:
          type: boolean
        thumbnailUrl:
          type: string
        imageUrls:
          type: array
          items:
            type: string
        memo:
          type: string
        recipeUrl:
          type: string
        appName:
          type: string
        faviconUrl:
          type: string
        createdAt:
          format: date-time
          type: string
        requesters:
          type: array
          items:
            type: string
      required:
        - id
        - title
        - spaceId
        - userId
        - isFavorite
        - thumbnailUrl
        - imageUrls
        - memo
        - recipeUrl
        - appName
        - faviconUrl
        - createdAt
        - requesters
    PaginatedRecipePresenter:
      type: object
      properties:
        recipes:
          type: array
          items:
            $ref: '#/components/schemas/RecipePresenter'
        nextCursor:
          type: string
      required:
        - recipes
        - nextCursor
    RecipeMetaDataPresenter:
      type: object
      properties:
        title:
          type: string
        thumbnailUrl:
          type: string
        appName:
          type: string
        faviconUrl:
          type: string
      required:
        - title
        - thumbnailUrl
        - appName
        - faviconUrl
    CreateRecipeDto:
      type: object
      properties:
        title:
          type: string
        thumbnailUrl:
          type: string
        imageUrls:
          type: array
          items:
            type: string
        memo:
          type: string
        recipeUrl:
          type: string
        faviconUrl:
          type: string
        appName:
          type: string
      required:
        - title
        - thumbnailUrl
        - imageUrls
        - memo
        - recipeUrl
        - faviconUrl
        - appName
    UpdateRecipeDto:
      type: object
      properties:
        title:
          type: string
        isFavorite:
          type: boolean
        thumbnailUrl:
          type: string
        imageUrls:
          type: array
          items:
            type: string
        memo:
          type: string
        recipeUrl:
          type: string
        faviconUrl:
          type: string
        appName:
          type: string
      required:
        - title
        - isFavorite
        - thumbnailUrl
        - imageUrls
        - memo
        - recipeUrl
        - faviconUrl
        - appName
    CreateRequestedRecipeDto:
      type: object
      properties:
        recipeId:
          type: string
      required:
        - recipeId
    CreateRequestedRecipePresenter:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
    SpacePresenter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        users:
          type: array
          items:
            type: string
      required:
        - id
        - name
        - users
    SpaceInvitationPresenter:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    ValidateInvitationDto:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    SpaceJoinPresenter:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
    UpdateSpaceDto:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    Recipe:
      type: object
      properties: {}
    MenuPresenter:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        scheduledAt:
          format: date-time
          type: string
        userId:
          type: string
        recipeId:
          type: string
        recipe:
          $ref: '#/components/schemas/Recipe'
      required:
        - id
        - status
        - scheduledAt
        - userId
        - recipeId
        - recipe
    PaginatedMenuPresenter:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: '#/components/schemas/MenuPresenter'
        nextCursor:
          type: string
      required:
        - menus
        - nextCursor
    CreateMenuDto:
      type: object
      properties:
        recipeId:
          type: string
        scheduledAt:
          format: date-time
          type: string
      required:
        - recipeId
        - scheduledAt
    UpdateMenuDto:
      type: object
      properties:
        status:
          type: string
        scheduledAt:
          format: date-time
          type: string
      required:
        - status
        - scheduledAt
    DeleteMenuPresenter:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
    RoadmapPresenter:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        publishedAt:
          type: string
        revisedAt:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - 対応中
            - 未対応
            - 対応済
      required:
        - id
        - createdAt
        - updatedAt
        - publishedAt
        - revisedAt
        - title
        - description
        - status
    SendContactDto:
      type: object
      properties:
        email:
          type: string
        content:
          type: string
      required:
        - email
        - content
    ContactPresenter:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
