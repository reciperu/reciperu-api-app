openapi: 3.0.0
paths:
  /users/{uuid}:
    get:
      operationId: getUser
      summary: ''
      parameters:
        - name: uuid
          required: true
          in: path
          description: user uuid
          schema:
            type: string
      responses:
        '200':
          description: The user has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
      tags: &ref_0
        - user
    patch:
      operationId: updateUser
      summary: ''
      parameters:
        - name: uuid
          required: true
          in: path
          description: user uuid
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: The user has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
      tags: *ref_0
  /users:
    post:
      operationId: createUser
      summary: ''
      parameters: []
      responses:
        '201':
          description: The user has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
      tags: *ref_0
  /spaces:
    post:
      operationId: SpaceController_create
      parameters:
        - name: userUuid
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceDto'
      responses:
        '201':
          description: The space has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: &ref_1
        - space
  /spaces/{id}:
    get:
      operationId: SpaceController_show
      parameters:
        - name: id
          required: true
          in: path
          description: spaceId
          schema:
            type: number
      responses:
        '200':
          description: The spaces has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: *ref_1
  /spaces/{uuid}:
    patch:
      operationId: SpaceController_update
      parameters:
        - name: uuid
          required: true
          in: path
          description: space uuid
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpaceDto'
      responses:
        '200':
          description: The space has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: *ref_1
  /spaces/join:
    patch:
      operationId: SpaceController_join
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinSpaceDto'
      responses:
        '200':
          description: The space has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceEntity'
      tags: *ref_1
  /recipes:
    get:
      operationId: RecipeController_index
      parameters: []
      responses:
        '200':
          description: The recipes has been successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeEntity'
      tags:
        - recipe
    post:
      operationId: RecipeController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipeDto'
      responses:
        '201':
          description: The recipe has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeEntity'
      tags:
        - recipe
  /recipes/{uuid}:
    get:
      operationId: RecipeController_show
      parameters: []
      responses:
        '200':
          description: The recipe has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeEntity'
      tags:
        - recipe
    patch:
      operationId: RecipeController_update
      parameters:
        - name: uuid
          required: true
          in: path
          description: recipe uuid
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecipeDto'
      responses:
        '200':
          description: The recipe has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeEntity'
      tags:
        - recipe
    delete:
      operationId: RecipeController_delete
      parameters:
        - name: uuid
          required: true
          in: path
          description: recipe uuid
          schema:
            type: string
      responses:
        '200':
          description: The recipe has been successfully deleted.
      tags:
        - recipe
  /recipes/search:
    get:
      operationId: RecipeController_search
      parameters:
        - name: scene
          required: false
          in: query
          schema:
            type: string
        - name: tags
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: materials
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: genre
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: The recipe has been successfully deleted.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeEntity'
      tags:
        - recipe
info:
  title: reciperu api app
  description: API documents
  version: '1.0'
  contact: {}
tags:
  - name: '1.0'
    description: ''
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    UserEntity:
      type: object
      properties:
        id:
          type: number
        uuid:
          type: string
        name:
          type: string
        spaceRole:
          type: string
        imageUrl:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
        - id
        - uuid
        - name
        - spaceRole
        - imageUrl
        - createdAt
    UpdateUserDto:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    CreateSpaceDto:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
      required:
        - name
        - password
    SpaceEntity:
      type: object
      properties:
        id:
          type: number
        uuid:
          type: string
        name:
          type: string
        password:
          type: string
        createdAt:
          format: date-time
          type: string
        users:
          $ref: '#/components/schemas/UserEntity'
      required:
        - id
        - uuid
        - name
        - password
        - createdAt
    UpdateSpaceDto:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
      required:
        - name
        - password
    JoinSpaceDto:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
      required:
        - name
        - password
    TagEntity:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
    MaterialEntity:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
    RecipeEntity:
      type: object
      properties:
        id:
          type: number
        uuid:
          type: string
        title:
          type: string
        cost:
          type: number
        indication:
          type: string
        genre:
          type: string
        imageUrl:
          type: string
        recipeUrl:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        spaceId:
          type: number
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagEntity'
        materials:
          type: array
          items:
            $ref: '#/components/schemas/MaterialEntity'
      required:
        - id
        - uuid
        - title
        - cost
        - indication
        - genre
        - imageUrl
        - recipeUrl
        - createdAt
        - updatedAt
        - spaceId
    CreateRecipeDto:
      type: object
      properties:
        title:
          type: string
        cost:
          type: number
        indication:
          type: string
        genreId:
          type: string
        imageUrl:
          type: string
        recipeUrl:
          type: string
        tagIds:
          type: array
          items:
            type: string
        materialIds:
          type: array
          items:
            type: string
      required:
        - title
        - cost
        - indication
        - genreId
        - imageUrl
        - recipeUrl
        - tagIds
        - materialIds
    UpdateRecipeDto:
      type: object
      properties:
        title:
          type: string
        cost:
          type: number
        indication:
          type: string
        genreId:
          type: string
        imageUrl:
          type: string
        recipeUrl:
          type: string
        tagIds:
          type: array
          items:
            type: string
        materials:
          type: array
          items:
            type: string
      required:
        - title
        - cost
        - indication
        - genreId
        - imageUrl
        - recipeUrl
        - tagIds
        - materials
