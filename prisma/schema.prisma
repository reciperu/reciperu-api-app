// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  isOwner   Boolean  @default(false) @map("is_owner")
  imageUrl  String   @map("image_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  uid       String   @unique
  spaceId   Int?     @map("space_id")
  spaces    Space?   @relation(fields: [spaceId], references: [id])

  @@index([uuid, id])
  @@map("users")
}

model Space {
  id         Int           @id @default(autoincrement())
  uuid       String        @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String        @unique
  password   String        @unique  
  createdAt  DateTime      @default(now()) @map("created_at")
  users       User[]
  recipe     Recipe[]
  suggestion Suggestions[]

  @@index([uuid, id])
  @@map("spaces")
}


model Recipe {
  id             Int                @id @default(autoincrement())
  uuid           String             @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title          String
  cost           Int
  indication     String
  genre          String
  imageUrl       String             @map("image_url")
  recipeUrl      String             @map("recipe_url")
  createdAt      DateTime           @default(now()) @map("created_at")
  updatedAt      DateTime           @updatedAt @map("updated_at")
  spaceId        Int                @map("space_id")
  spaces         Space              @relation(fields: [spaceId], references: [id])
  recipeMaterial RecipeMateritals[]
  recipeTags     RecipeTags[]
  suggestions     Suggestions[]

  @@index([uuid, id])
  @@map("recipes")
}

model RecipeMateritals {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  recipeId   Int      @map("recipe_id")
  recipes    Recipe   @relation(fields: [recipeId], references: [id])
  materialId Int      @map("material_id")
  materials  Material @relation(fields: [materialId], references: [id])

  @@map("recipe_materials")
}

model RecipeTags {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  recipeId  Int      @map("recipe_id")
  recipes   Recipe   @relation(fields: [recipeId], references: [id])
  tagId     Int      @map("tag_id")
  tags      Tag      @relation(fields: [tagId], references: [id])

  @@index([recipeId, tagId])
  @@map("recipe_tags")
}

model Material {
  id              Int                @id @default(autoincrement())
  name            String
  receipeMaterials RecipeMateritals[]

  @@index([name, id])
  @@map("materials")
}

model Tag {
  id          Int          @id @default(autoincrement())
  name        String
  receipeTags RecipeTags[]

  @@index([name, id])
  @@map("tags")
}

model Suggestions {
  id               Int      @id @default(autoincrement())
  rakutenRecipeUrl String   @map("rakuten_recipe_url")
  createdAt        DateTime @default(now()) @map("created_at")
  spaceId          Int
  recipeId         Int
  spaces           Space    @relation(fields: [spaceId], references: [id])
  recipes          Recipe   @relation(fields: [recipeId], references: [id])

  @@index([rakutenRecipeUrl, id])
  @@map("suggestions")
}
