{
  "name": "reciperu-api-app",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "main": "dist/src/index.js",
  "scripts": {
    "prisma:push:local": "NODE_ENV=local ./scripts/setEnvAndRunPrisma.sh db push",
    "prisma:push:dev": "NODE_ENV=development ./scripts/setEnvAndRunPrisma.sh db push",
    "prisma:push:prod": "NODE_ENV=production ./scripts/setEnvAndRunPrisma.sh db push",
    "prisma:generate:local": "NODE_ENV=local ./scripts/setEnvAndRunPrisma.sh generate",
    "prisma:generate:dev": "NODE_ENV=development ./scripts/setEnvAndRunPrisma.sh generate",
    "prisma:generate:prod": "NODE_ENV=production ./scripts/setEnvAndRunPrisma.sh generate",
    "prisma:migrate:local": "NODE_ENV=local ./scripts/setEnvAndRunPrisma.sh migrate deploy",
    "prisma:migrate:dev": "NODE_ENV=development ./scripts/setEnvAndRunPrisma.sh migrate deploy",
    "prisma:migrate:prod": "NODE_ENV=production ./scripts/setEnvAndRunPrisma.sh migrate deploy",
    "build": "nest build",
    "build:dev": "cross-env NODE_ENV=development nest build",
    "build:prod": "cross-env NODE_ENV=production nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "npm run prisma:generate:dev && cross-env NODE_ENV=development nest start --watch",
    "start:prod": "npm run prisma:generate:prod && cross-env NODE_ENV=production node dist/main",
    "start:local": "npm run prisma:generate:local && cross-env NODE_ENV=local nest start --watch",
    "start:debug": "npm run prisma:generate:local && cross-env NODE_ENV=local nest start --debug --watch",
    "lint": "eslint {src,apps,libs,test}/**/*.ts",
    "lint:fix": "eslint '{src,apps,libs,test}/**/*.ts' --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "deploy:dev": "cross-env FIREBASE_ENV=development npm run prisma:generate:dev && npm run build:dev && firebase deploy --only functions",
    "deploy:prod": "cross-env FIREBASE_ENV=production npm run prisma:generate:prod && npm run build:prod && firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.1.7",
    "@prisma/client": "^5.1.1",
    "@types/js-yaml": "^4.0.5",
    "axios": "^1.7.2",
    "body-parser": "^1.20.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "dayjs": "^1.11.10",
    "firebase-admin": "^11.9.0",
    "firebase-functions": "^5.0.1",
    "fs": "0.0.1-security",
    "helmet": "^7.1.0",
    "js-yaml": "^4.1.0",
    "jsdom": "^24.0.0",
    "microcms-js-sdk": "^2.7.0",
    "passport-http-bearer": "^1.0.1",
    "prisma": "^5.1.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/jsdom": "^21.1.6",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.3.1",
    "@types/passport-http-bearer": "^1.0.37",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.59.11",
    "@typescript-eslint/parser": "^5.59.11",
    "cross-env": "^7.0.3",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.5.0",
    "prettier": "^2.8.8",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "engines": {
    "node": "20"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
